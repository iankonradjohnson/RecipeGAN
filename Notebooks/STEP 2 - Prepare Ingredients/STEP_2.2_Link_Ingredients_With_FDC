{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"STEP_2.2_Link_Ingredients_With_FDC","provenance":[],"mount_file_id":"1AILV4YBYc5okPW3ZhV-N1gb0pcosLubA","authorship_tag":"ABX9TyPlM1LKjV0gmeZKfTIlvj0x"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"1c3d504b4c264cbbbddc924a0f90a3c1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_8c21fcf4a66b43389ffa26ef8eb5c4a6","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_f4422bf3182e4390898405f5dbe93854","IPY_MODEL_2149396c8739442aaf9cf6876639129c"]}},"8c21fcf4a66b43389ffa26ef8eb5c4a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"f4422bf3182e4390898405f5dbe93854":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_da2556f5e28a42d79059d6cca8d8f055","_dom_classes":[],"description":" 99%","_model_name":"IntProgressModel","bar_style":"","max":661,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":655,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a86234b6e63a44f088b021868ea4ef85"}},"2149396c8739442aaf9cf6876639129c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_020a1e2645154440b0637908e98cf441","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"â€‹","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 655/661 [00:10&lt;00:00, 64.23it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_5b8cbede356948a9a17d8ca8bae4e645"}},"da2556f5e28a42d79059d6cca8d8f055":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"a86234b6e63a44f088b021868ea4ef85":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"020a1e2645154440b0637908e98cf441":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"5b8cbede356948a9a17d8ca8bae4e645":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"FcJ1dOj89T5W","colab_type":"text"},"source":["# STEP 2.2 - Link Ingredients With FDC With FDC API\n","We need to link our ingredients table with the Food Data Central (FDC) Database, so we can acquire further data such as nutrient content, ingredients, portion size, calories, etc. This data may be useful during data mining."]},{"cell_type":"code","metadata":{"id":"tFTR6kL_oDWQ","colab_type":"code","colab":{}},"source":["import pandas as pd\n","from tqdm import notebook\n","import requests\n","import random\n","from lxml.html import fromstring\n","import concurrent.futures"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DsmOHH5WoFHs","colab_type":"code","colab":{}},"source":["ingr_df = pd.read_csv('/content/drive/My Drive/Data Science Projects/RecipeApp/data/myData/INGREDIENTS_FINAL.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZdUNtChAw01P","colab_type":"code","colab":{}},"source":["freq_base_df = pd.read_csv('/content/drive/My Drive/Data Science Projects/RecipeApp/data/myData/ingredient_frequency_4.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"v5Zfp6XnoHeJ","colab_type":"code","colab":{}},"source":["URL = \"https://api.nal.usda.gov/fdc/v1/search?api_key=yuaqggVFg636ArnOHtePTc32tEhGOLyuSTkP56MH\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DJE53r3nowH_","colab_type":"code","colab":{}},"source":["fdc_df = pd.read_csv('/content/drive/My Drive/Data Science Projects/RecipeApp/data/FoodData_Central/food.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fT2p9-duqg4J","colab_type":"code","colab":{}},"source":["freq_df = pd.DataFrame(ingr_df['name'].value_counts()).reset_index().rename(columns={'index': 'name', 'name': 'count'})"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5XwyQlrC92de","colab_type":"text"},"source":["## Batch API Ingredients Matcher\n","This algorithm will link each ingredient with an FDC ID and export the results to a csv.\n","\n","The algorithm must be executed in batches because the API rate limit is 3600 calls per hour. To collect this data, we need to factory reset the Google Colab Runtime for every 3600 calls. This will allow us to work around the API limit. \n","\n","To run, we need to manually increment the variable i for every factory reset. The appending of rows to the csv file will happen automatically for each batch i. Because we are Multithreading the process, the data collection itself will occur dramatically faster than if we were to linearly execute the loop.\n","\n","The algorithm does not match every ingredient due to the way the API operates. Included in the API response is a score associated with how well a search result matches the query, and therefore we will only allow matches above a certain threshold. We will, however, take care of the rest in the next notebook"]},{"cell_type":"code","metadata":{"id":"Gwbk6DMupwAu","colab_type":"code","outputId":"8fa5e086-5224-43cb-d160-8d7ba9a9ddd5","executionInfo":{"status":"ok","timestamp":1585700085240,"user_tz":240,"elapsed":18652,"user":{"displayName":"Ian Johnson","photoUrl":"","userId":"05829827114387639060"}},"colab":{"base_uri":"https://localhost:8080/","height":152,"referenced_widgets":["1c3d504b4c264cbbbddc924a0f90a3c1","8c21fcf4a66b43389ffa26ef8eb5c4a6","f4422bf3182e4390898405f5dbe93854","2149396c8739442aaf9cf6876639129c","da2556f5e28a42d79059d6cca8d8f055","a86234b6e63a44f088b021868ea4ef85","020a1e2645154440b0637908e98cf441","5b8cbede356948a9a17d8ca8bae4e645"]}},"source":["def get_fdc_id(ingr):\n","\n","  try:\n","    base_query = freq_base_df[freq_base_df.name == ingr]\n","    if len(base_query) != 0:\n","      pbar.update(1)\n","      return float(base_query['fdc_id'].head(1))\n","\n","    PARAMS = {\"generalSearchInput\": ingr}\n","    r = requests.get(url = URL, params = PARAMS)\n","    data = r.json()  \n","    if 'error' in data:\n","      pbar.update(1)\n","      return 0\n","\n","    if data['totalHits'] != 0:\n","      top_5_results_df = pd.DataFrame(data['foods'])\n","\n","      if data['foods'][0]['score'] > 650:\n","        match = top_5_results_df.head(1)\n","        fdc_id = match['fdcId']\n","        pbar.update(1)\n","        return float(fdc_id)\n","    pbar.update(1)\n","    return 0\n","\n","  except KeyboardInterrupt:\n","    raise\n","\n","  except:\n","    pbar.update(1)\n","    return 0\n","\n","i = 10\n","\n","range = [3600*i, 3600*(i+1)]\n","slice_df = freq_df[range[0]:range[1]]\n","\n","ingredients = slice_df['name'].to_list()\n","\n","pbar = notebook.tqdm(total=len(ingredients))\n","\n","threads = min(25, len(ingredients))\n","with concurrent.futures.ThreadPoolExecutor(max_workers=threads) as executor:\n","    slice_df['fdc_id'] = list(executor.map(get_fdc_id, ingredients))\n","  \n","slice_df.to_csv('/content/drive/My Drive/Data Science Projects/RecipeApp/data/myData/INGR_FDC_FINAL.csv', mode='a', header=False)"],"execution_count":7,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c3d504b4c264cbbbddc924a0f90a3c1","version_minor":0,"version_major":2},"text/plain":["HBox(children=(IntProgress(value=0, max=661), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:45: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"v22VFTCTrsv4","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}